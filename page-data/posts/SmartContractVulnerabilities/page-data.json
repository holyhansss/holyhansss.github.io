{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/SmartContractVulnerabilities",
    "result": {"pageContext":{"currentCategory":"SmartContractVulnerabilities","categories":["All","SmartContractVulnerabilities","ethereum","feature"],"edges":[{"node":{"id":"bbced782-f109-5c42-9522-c570827ac521","excerpt":"👋 Reentrancy Attack (재진입 공격) 들어가기전 Fallback 함수? Fallback 함수는 contract에서 함수를 실행시킬때 함수가 존재하지 않는다면 실행되는 function이다.\r\n0.6이전 버전에서는 fallback이 ether는 것과 존재하지 않는 함수의 대비책으로 사용되었지만 0.6 이후 버전부터 fallback은 fallback과 receive로 나누어졌다. 0.6부터는 fallback을 사용하지 않고 receive를 통해 이더를 받을 수 있다. Reentrancy Attack(재진입 공격)이란? Reentrancy Attack은 contract A가 하나의 user로써 contract B 에게 transaction을 보낸다. 이때 contract A가 요청에 대한 제어권을 가지게된다. 그렇게 되면 contract A가 보낸 첫번째 요청이 끝나기 전에 다른 함수를 계속해서 호출 할 수 있게된다. 이는 재진입을 ether를 빼올 수 있게 된다. Exam…","fields":{"slug":"/smart_contract/reentrancy_attack/"},"frontmatter":{"categories":"SmartContractVulnerabilities","title":"Reentrancy Attack (재진입 공격)?","date":"December 15, 2021"}},"next":{"fields":{"slug":"/evm/"}},"previous":null}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}