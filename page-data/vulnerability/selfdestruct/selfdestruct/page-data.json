{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/vulnerability/selfdestruct/selfdestruct/",
    "result": {"data":{"cur":{"id":"83a42543-4d2b-5084-8bce-93f63f12c217","html":"<h1 id=\"-self-destruct\" style=\"position:relative;\"><a href=\"#-self-destruct\" aria-label=\" self destruct permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 Self Destruct</h1>\n<h2 id=\"들어가기전\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%A0%84\" aria-label=\"들어가기전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기전</h2>\n<h3 id=\"self-destruct란-무엇인가\" style=\"position:relative;\"><a href=\"#self-destruct%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"self destruct란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Self Destruct란 무엇인가?</h3>\n<ol>\n<li>self destruct는 contract를 삭제할 수 있는 유일한 수단이다.</li>\n<li>contract안에 남아있는 Ether를 address에게 반환한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>anAddress<span class=\"token punctuation\">)</span></code></pre></div>\n<p>selfdestruct를 실행시키면 anAddress에게 contract에 남아있는 Ether이 반환된다. 만약에 반환하는 address는 EOA와 CA 모두 넣을 수 있다. 하지만 반환한 CA가 payable이 아니라면 반환된 Ether은 다시는 찾을 수 없게된다. 즉 반환된 CA에 영원히 <strong>LOCK</strong> 된다.</p>\n<p>보다 잘 이해하기 위해 Example Code를 살펴보자!!</p>\n<hr>\n<h2 id=\"example-code\" style=\"position:relative;\"><a href=\"#example-code\" aria-label=\"example code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example code</h2>\n<p>간단한 code로 이해해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherGame</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> targetAmount <span class=\"token operator\">=</span> <span class=\"token number\">7</span> ether<span class=\"token punctuation\">;</span>\r\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> winner<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only send 1 Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token builtin\">uint</span> balance <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;=</span> targetAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Game is over\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">==</span> targetAmount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            winner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">function</span> <span class=\"token function\">claimReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> winner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not winner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\r\n    EtherGame etherGame<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>EtherGame _etherGame<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        etherGame <span class=\"token operator\">=</span> <span class=\"token function\">EtherGame</span><span class=\"token punctuation\">(</span>_etherGame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// You can simply break the game by sending ether so that</span>\r\n        <span class=\"token comment\">// the game balance >= 7 ether</span>\r\n\r\n        <span class=\"token comment\">// cast address to payable</span>\r\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>etherGame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 contract는 7번째로 deposit()하여 7 Ether를 가져갈 수 있는 게임이다.\r\ndeposit()을 call할 때 msg.value는 1 Ether만 설정할 수 있다.</p>\n<p>시나리오는 이렇다.</p>\n<ol>\n<li>EtherGame contract가 배포된다.</li>\n<li>A와 B가 각각 1 Ether를 deposit() 한다.</li>\n<li>누군가 EtherGame contract의 주소와 함께 Attack contract를 배포한다.</li>\n<li>그리고 Attack.attack()을 call 한다.</li>\n<li>EtherGame은 더 이상 실행될 수 없게되며 누구도 winner가 될 수 없게 된다.</li>\n</ol>\n<p>EtherGame contract의 특성상 selfdestruct 공격에 취약할 수 밖에 없게 설계 되어있다.</p>\n<hr>\n<h2 id=\"how-to-prevent\" style=\"position:relative;\"><a href=\"#how-to-prevent\" aria-label=\"how to prevent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to prevent?</h2>\n<p>EtherGame contract에서 selfdestruct를 예방하기 위해서는 <code class=\"language-text\">address(this).balance</code> 대신 deposit()을 통해 들어온 balance를 따로 저장해주고 저장한 변수와 상호작용하면 된다. 위에 contract의 변수와 deposit()을 아래와 같이 바꾸면 된다!</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherGame</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> targetAmount <span class=\"token operator\">=</span> <span class=\"token number\">3</span> ether<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 바뀐 부분!!!</span>\r\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> balance<span class=\"token punctuation\">;</span>\r\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> winner<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only send 1 Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">//바뀐 부분!!!</span>\r\n        balance <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;=</span> targetAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Game is over\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">==</span> targetAmount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            winner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>selfdestruct는 좀 흥미롭다. 블록체인 이외에서 들어본적도 없는 것이라 특별하다고 생각된다. 어떤 contract든 selfdestruct에 의해서 Ether를 받을 수 있다. 그렇기 때문에 <code class=\"language-text\">address(this).balance</code>와 같은 contract의 balance를 사용해 balance를 불러오는 것을 자제하고 꼭 필요할때만 사용하자!!</p>\n<hr>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li><a href=\"https://swcregistry.io/docs/SWC-106\">https://swcregistry.io/docs/SWC-106</a></li>\n<li><a href=\"https://solidity-by-example.org/hacks/self-destruct/\">https://solidity-by-example.org/hacks/self-destruct/</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%A0%84\">들어가기전</a></p>\n<ul>\n<li><a href=\"#self-destruct%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\">Self Destruct란 무엇인가?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#example-code\">Example code</a></p>\n</li>\n<li>\n<p><a href=\"#how-to-prevent\">How to prevent?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n<ul>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"👋 Self Destruct 들어가기전 Self Destruct란 무엇인가? self destruct는 contract를 삭제할 수 있는 유일한 수단이다. contract안에 남아있는 Ether를 address에게 반환한다. selfdestruct를 실행시키면 anAddress에게 contract에 남아있는 Ether이 반환된다. 만약에 반환하는 address는 EOA와 CA 모두 넣을 수 있다. 하지만 반환한 CA가 payable이 아니라면 반환된 Ether은 다시는 찾을 수 없게된다. 즉 반환된 CA에 영원히 LOCK 된다. 보다 잘 이해하기 위해 Example Code를 살펴보자!! Example code 간단한 code로 이해해보자! 이 contract는 7번째로 deposit()하여 7 Ether를 가져갈 수 있는 게임이다.\r\ndeposit()을 call할 때 msg.value는 1 Ether만 설정할 수 있다. 시나리오는 이렇다. EtherGame contract가 배포…","frontmatter":{"date":"January 09, 2021","title":"(취약점 시리즈 9) Self Destruct","categories":"취약점분석","author":"한성원","emoji":"🧢"},"fields":{"slug":"/vulnerability/selfdestruct/selfdestruct/"}},"next":null,"prev":{"id":"b1d8d626-9e8c-56e1-9d4c-bbd3bb5e03ea","html":"<h1 id=\"-블로그를-시작한-이유\" style=\"position:relative;\"><a href=\"#-%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\" 블로그를 시작한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 블로그를 시작한 이유?</h1>\n<h2 id=\"1-배운것에-대한-내용-정리\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EC%9A%B4%EA%B2%83%EC%97%90-%EB%8C%80%ED%95%9C-%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC\" aria-label=\"1 배운것에 대한 내용 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배운것에 대한 내용 정리</h2>\n<p>무언가를 배우고 글로 남기는 것이 굉장히 중요하다고 생각한다. 블로그를 통해 앞으로 배울 것 들에 대한 기록을 남기고 싶어 시작한다.</p>\n<h2 id=\"2-내-생각-정리--글쓰는-법\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%EC%83%9D%EA%B0%81-%EC%A0%95%EB%A6%AC--%EA%B8%80%EC%93%B0%EB%8A%94-%EB%B2%95\" aria-label=\"2 내 생각 정리  글쓰는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 생각 정리 &#x26; 글쓰는 법</h2>\n<p>내가 배운 것과 생각을 잘 정리해 글로 나타내고 전달하는 것은 어렵다. 블로그를 통해 <strong>의사소통</strong> 에 중요한 정확한 정보 정리 및 전달을 배우고 싶다.</p>\n<p>앞으로 블로그에는 개발 관련 공부 자료 및 내가 했던 경험에 대해 정리해 업로드 할 예정이다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%EB%B0%B0%EC%9A%B4%EA%B2%83%EC%97%90-%EB%8C%80%ED%95%9C-%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC\">1. 배운것에 대한 내용 정리</a></li>\n<li><a href=\"#2-%EB%82%B4-%EC%83%9D%EA%B0%81-%EC%A0%95%EB%A6%AC--%EA%B8%80%EC%93%B0%EB%8A%94-%EB%B2%95\">2. 내 생각 정리 &#x26; 글쓰는 법</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 07, 2021","title":"블로그를 시작한 이유?","categories":"feature","author":"한성원","emoji":"🧢"},"fields":{"slug":"/startingBlog/"}},"site":{"siteMetadata":{"siteUrl":"https://holyhansss.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/vulnerability/selfdestruct/selfdestruct/","nextSlug":"","prevSlug":"/startingBlog/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}